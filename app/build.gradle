apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// Create a variable called keystorePropertiesFile, and initialize it navigateTo your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "com.kalk.jmr"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode 4
        versionName "1.0.3"
        vectorDrawables.useSupportLibrary true
        signingConfig signingConfigs.config
    }

    buildTypes {

        buildTypes.each {
            it.buildConfigField 'String', 'GoogleAPIKEY', GoogleAPIKey
        }

        debug {
            // Temporary workaround for Kotlin 1.2.50 and DataBinding bug. For more context see
            // https://issuetracker.google.com/issues/110198434 and
            // https://youtrack.jetbrains.com/issue/KT-24915#comment=27-2914947
            tasks.whenTaskAdded { task ->
                if (task.name == 'kaptDebugKotlin') {
                    task.dependsOn dataBindingExportFeaturePackageIdsDebug
                }
            }
            signingConfig signingConfigs.config
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Temporary workaround for Kotlin 1.2.50 and DataBinding bug. For more context see
            // https://issuetracker.google.com/issues/110198434 and
            // https://youtrack.jetbrains.com/issue/KT-24915#comment=27-2914947
            tasks.whenTaskAdded { task ->
                if (task.name == 'kaptReleaseKotlin') {
                    task.dependsOn dataBindingExportFeaturePackageIdsRelease
                }
            }
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
}

dependencies {

    //Spotify
    implementation project(':spotify-app-remote')
    implementation "com.spotify.android:auth:$rootProject.spotifyAuthVersion"

    //Google ActivityBroadcast Recognition
    implementation "com.google.android.gms:play-services-location:$rootProject.googlePlaySerivceLocationVersion"

    //Webservice calls
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "org.jetbrains.anko:anko-design:$ankoVersion"

    // For SnackBars
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycleVersion"
    implementation "android.arch.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    implementation "android.arch.work:work-runtime-ktx:$rootProject.workVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"

    // Testing dependencies
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "android.arch.core:core-testing:$rootProject.archTestVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoCoreVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoInlineVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okhttpMockserverVersion"
    testImplementation "com.squareup.retrofit2:retrofit-mock:$rootProject.retrofitVersion"
    androidTestImplementation "android.arch.core:core-testing:$rootProject.archTestVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okhttpMockserverVersion"
    androidTestImplementation "com.squareup.retrofit2:retrofit-mock:$rootProject.retrofitVersion"
}
